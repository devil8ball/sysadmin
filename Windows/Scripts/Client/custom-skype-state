$CustomPresencePath="$env:SystemDrive\Windows"
$XMLFile=$CustomPresencePath+"\SmartWorking.xml"
$xmlpathinregistry=$XMLFile

Function Create-CustomPresenceXml{
$HereString=@"
<?xml version="1.0"?>
<customStates xmlns="http://schemas.microsoft.com/09/2009/communicator/customStates">
	<customState ID="1" availability="Busy">
		<activity LCID="1033">Smartworking - Busy</activity>
		<activity LCID="1036">Smartworking - Occupe</activity>
		<activity LCID="1034">Smartworking - Ocupado</activity>
		<activity LCID="1031">Smartworking - Verfugbar</activity>
        		<activity LCID="1040">Smartworking - Occupato</activity>
    	</customState>
	<customState ID="2" availability="Online">
		<activity LCID="1033">Smartworking - Online</activity>
		<activity LCID="1036">Smartworking - Disponible</activity>
		<activity LCID="1034">Smartworking - Disponible</activity>
		<activity LCID="1031">Smartworking - Besetzt</activity>
        		<activity LCID="1040">Smartworking - Disponibile</activity>
    	</customState>
</customStates>
"@    
Set-Content -Path $XMLFile -Value $HereString
}

Function Create-RegistrySettingsOffice2013{

    if((Test-Path HKLM:\SOFTWARE\Policies\Microsoft\Office\16.0\Lync) -ne $True){
        #Create the registry paths for 32 bit which also apply to 64 bit
        New-Item -Path HKLM:\SOFTWARE\Policies\Microsoft\Office\ -ErrorAction SilentlyContinue
        New-Item -Path HKLM:\SOFTWARE\Policies\Microsoft\Office\15.0\  -ErrorAction SilentlyContinue
        New-Item -Path HKLM:\SOFTWARE\Policies\Microsoft\Office\15.0\Lync\  -ErrorAction SilentlyContinue
    }

    if((Get-ItemProperty  HKLM:\SOFTWARE\Policies\Microsoft\Office\15.0\Lync -Name EnableSIPHighSecurityMode -ea 0).EnableSIPHighSecurityMode -eq "0") {'EnableSIPHighSecurityMode Property already exists for Office 2013'}
    else {
        Set-ItemProperty -Path HKLM:\SOFTWARE\Policies\Microsoft\Office\15.0\Lync -Name EnableSIPHighSecurityMode -Value "0" -Type DWord
        Write-Output "EnableSIPHighSecurityMode Property set for Office 2013, if it is the first time this is set, you may need to reboot your computer" 
    }

    if((Get-ItemProperty  HKLM:\SOFTWARE\Policies\Microsoft\Office\15.0\Lync -Name CustomStateURL -ea 0).CustomStateURL -eq $xmlpathinregistry) {'CustomStateURL Property already exists for Office 2013'}
    else {
        Set-ItemProperty -Path HKLM:\SOFTWARE\Policies\Microsoft\Office\15.0\Lync -Name CustomStateURL -Value $xmlpathinregistry
        Write-Output "CustomStateURL Property set for Office 2013, if it is the first time this is set, you may need to reboot your computer" 

    }

}

Function Create-RegistrySettingsOffice2016{

    if((Test-Path HKLM:\SOFTWARE\Policies\Microsoft\Office\16.0\Lync) -ne $True){
        #Create the registry paths for 32 bit whcich also apply to 64 bit
        New-Item -Path HKLM:\SOFTWARE\Policies\Microsoft\Office\ -ErrorAction SilentlyContinue
        New-Item -Path HKLM:\SOFTWARE\Policies\Microsoft\Office\16.0\  -ErrorAction SilentlyContinue
        New-Item -Path HKLM:\SOFTWARE\Policies\Microsoft\Office\16.0\Lync\  -ErrorAction SilentlyContinue
    }

    if((Get-ItemProperty  HKLM:\SOFTWARE\Policies\Microsoft\Office\16.0\Lync -Name EnableSIPHighSecurityMode -ea 0).EnableSIPHighSecurityMode -eq "0") {'EnableSIPHighSecurityMode Property already exists for Office 2016'}
    else {
        Set-ItemProperty -Path HKLM:\SOFTWARE\Policies\Microsoft\Office\16.0\Lync -Name EnableSIPHighSecurityMode -Value "0" -Type DWord
        Write-Output "EnableSIPHighSecurityMode Property set for Office 2016, if it is the first time this is set, you may need to reboot your computer" 
    }

    if((Get-ItemProperty  HKLM:\SOFTWARE\Policies\Microsoft\Office\16.0\Lync -Name CustomStateURL -ea 0).CustomStateURL -eq $xmlpathinregistry) {'CustomStateURL Property already exists for Office 2016'}
    else {
        Set-ItemProperty -Path HKLM:\SOFTWARE\Policies\Microsoft\Office\16.0\Lync -Name CustomStateURL -Value $xmlpathinregistry
        Write-Output "CustomStateURL Property set for Office 2016, if it is the first time this is set, you may need to reboot your computer" 

    }

}

#Creating folder if it does not exist
if(!(Test-Path $CustomPresencePath)){New-Item -ItemType Directory -Force -Path $CustomPresencePath}

#Running the functions
Create-CustomPresenceXml
Create-RegistrySettingsOffice2013
Create-RegistrySettingsOffice2016

exit 0
