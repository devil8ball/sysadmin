#!/bin/bash

# Zimbra script help
# @ Version 1.1
# Â© 2017 Leonardo Ziviani all rights reserved

NORMAL="\033[0m"
BOLD="\033[1m"

clear

echo ""
echo " Zimbra scripts explanation"
echo ""

printf " \033[1maccount-creation\033[0m \t\t\t - \t Create new mail account with default user settings\n"
printf " \033[1maccount-usage\033[0m \t\t\t\t - \t Check the total size of the account and notify if it's over 80%% \n"
printf " \033[1mauth-check\033[0m \t\t\t\t - \t Check failed login in SASL or SSH log and print a report\n"
printf " \033[1mban-ip\033[0m \t\t\t\t - \t Blacklist a generic ip with iptables\n"
printf " \033[1mblacklist-domain\033[0m \t\t\t - \t Put a sender or an entire domain in Zimbra whitelist\n"
printf " \033[1mcalendar-restore\033[0m \t\t\t - \t Syntetic restore of a user mailbox calendar (only deleted entry will be restored)\n"
printf " \033[1mcalendar-backup\033[0m \t\t\t - \t Full backup of user calendar (shared one not included)\n"
printf " \033[1mcontacts-restore\033[0m \t\t\t - \t Syntetic restore of a user mailbox contacts (only deleted entry will be restored)\n"
printf " \033[1mcontacts-backup\033[0m \t\t\t - \t Full backup of user contacts (shared ones not included)\n"
printf " \033[1mCreate-dkim\033[0m \t\t\t\t - \t Create a DKIM key for given domain\n"
printf " \033[1mdaemon-creation\033[0m \t\t\t - \t Create a new 'daemon' account with default settings\n"
printf " \033[1mddos-counter\033[0m \t\t\t\t - \t Increase DDoS counter (default 30, 100-150 suggested)\n"
printf " \033[1mddos-whitelist\033[0m \t\t\t - \t Whitelist an ip for DDoS\n"
printf " \033[1mdisable-force-password-change\033[0m \t\t - \t Disable user must change password at first login settings\n"
printf " \033[1menable-force-password-change\033[0m \t\t - \t Enable user must change password at first login settings\n"
printf " \033[1menable-smtp-465\033[0m \t\t\t - \t Enable legacy SSL SMTP port 465\n"
printf " \033[1mfilter-backup\033[0m \t\t\t\t - \t Backup of a user mail filters\n"
printf " \033[1mfilter-restore\033[0m \t\t\t - \t Restore of a user mail filters (existing filter must be deleted)\n"
printf " \033[1mflush-ban\033[0m \t\t\t\t - \t Reset ban list of firewall rules\n"
printf " \033[1mflush-queue\033[0m \t\t\t\t - \t Fulsh all queue from postfix (mail in flushed queue WILL NOT be delivered)\n"
printf " \033[1mhardening-spamassassin\033[0m \t\t - \t Hardening spamassassin configuration (Razor, Pyzor, spam score...)\n"
printf " \033[1mhardening-zimbra\033[0m \t\t\t - \t Hardening zimbra configuration\n"
printf " \033[1mhelp-me\033[0m \t\t\t\t - \t Useful server information\n"
printf " \033[1mimap-sync\033[0m \t\t\t\t - \t Sync mail between 2 imap public account\n"
printf " \033[1mlist-accounts\033[0m \t\t\t\t - \t List all user accounts of dodifferent domain\n"
printf " \033[1mmailbox-backup\033[0m \t\t\t - \t Full backup of a user mailbox\n"
printf " \033[1mmailbox-restore\033[0m \t\t\t - \t Syntetic restore of a user mailbox (only deleted mail will be restored)\n"
printf " \033[1mmail-report\033[0m \t\t\t\t - \t Quick report of elaborated mail group by server\n"
printf " \033[1mmassive-account-creation\033[0m \t\t - \t Same as account-creation, but for all accounts\n"
printf " \033[1mmassive-account-usage\033[0m \t\t\t - \t Same as account-usage, but for all accounts\n"
printf " \033[1mmassive-backup\033[0m \t\t\t - \t Launch every massive backup scripts\n"
printf " \033[1mmassive-calendar-backup\033[0m \t\t - \t Same as calendar-backup, but for all accounts\n"
printf " \033[1mmassive-calendar-restore\033[0m \t\t - \t Same as calendar-restore, but for all accounts (all old data will be erased)\n"
printf " \033[1mmassive-contacts-backup\033[0m \t\t - \t Same as contacts-backup, but for all accounts\n"
printf " \033[1mmassive-contacts-restore\033[0m \t\t - \t Same as contacts-restore, but for all accounts (all old data will be erased)\n"
printf " \033[1mmassive-daemon-creation\033[0m \t\t - \t Same as daemon-creation, but for all accounts\n"
printf " \033[1mmassive-disable-force-password-change\033[0m \t - \t Same as disable-force-password-change, but for all accounts\n"
printf " \033[1mmassive-enable-force-password-change\033[0m \t - \t Same as enable-force-password-change, but for all accounts\n"
printf " \033[1mmassive-filter-backup\033[0m \t\t\t - \t Same as filter-backup, but for all accounts\n"
printf " \033[1mmassive-filter-restore\033[0m \t\t - \t Same as filter-restore, but for all accounts\n"
printf " \033[1mmassive-imap-sync\033[0m \t\t\t - \t Same as imap-sync, but for all accounts\n"
printf " \033[1mmassive-inc-daily-backup\033[0m \t\t - \t Same as massive-backup, but day by day incremental\n"
printf " \033[1mmassive-inc-montly-backup\033[0m \t\t - \t Same as massive-backup, but month by month incremental\n"
printf " \033[1mmassive-inc-weekly-backup\033[0m \t\t - \t Same as massive-backup, but week by week incremental\n"
printf " \033[1mmassive-inc-yearly-backup\033[0m \t\t - \t Same as massive-backup, but year by year incremental\n"
printf " \033[1mmassive-mailbox-backup\033[0m \t\t - \t Same as mailbox-backup, but for all accounts\n"
printf " \033[1mmassive-mailbox-restore\033[0m \t\t - \t Same as mailbox-restore, but for all accounts (all old data will be erased)\n"
printf " \033[1mmassive-password-expire\033[0m \t\t - \t Same as password-expire, but for all accounts\n"
printf " \033[1mpassword-expire\033[0m \t\t\t - \t Check and notify user for password expiration\n"
printf " \033[1mmassive-restore\033[0m \t\t\t - \t Launch every massive restore scripts\n"
printf " \033[1mmassive-set-default-spam-filter\033[0m \t - \t Same as set-default-spam-filter, but for all accounts\n"
printf " \033[1mnuke-account\033[0m \t\t\t\t - \t Delete every mail in the account inbox folder\n"
printf " \033[1mnuke-restore\033[0m \t\t\t\t - \t Erase and then full restore (if backups are presents) given account\n"
printf " \033[1mquick-test-mail\033[0m \t\t\t - \t Send a mail for testing purpose (spam, dns records...)\n"
printf " \033[1mset-default-spam-filter\033[0m \t\t - \t Set the default spam filter (move spam tagged mail to junk)\n"
printf " \033[1mshow-queue\033[0m \t\t\t\t - \t Show current queue size (teorically, queue must be always empty)\n"
printf " \033[1mshow-version\033[0m \t\t\t\t - \t Show current Zimbra version\n"
printf " \033[1mtest-mail\033[0m \t\t\t\t - \t Send a mail for testing purpose, but with more parameters\n"
printf " \033[1mtls-exception\033[0m \t\t\t\t - \t Add per domain TLS exception\n"
printf " \033[1mwhitelist-domain\033[0m \t\t\t - \t Put a sender or an entire domain in Zimbra whitelist\n"
printf " \033[1mzimbra-help-me\033[0m \t\t\t - \t List of useful Zimbra commnads\n"
echo ""

exit 0